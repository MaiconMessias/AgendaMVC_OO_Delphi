unit UntPessoaDAO;

interface

uses
  UntDtPrincipal, UntIPessoa;

type
  TPessoaDAO = class
    class function inserirAlterarPessoa(pId: integer; pPessoa: IPessoa): boolean;
  end;

implementation

{ TPessoaDAO }

class function TPessoaDAO.inserirAlterarPessoa(pId: integer;
                                       pPessoa: IPessoa): boolean;
begin
var
  dtModule: TDataModule1;
begin
  dtModule := UntDtPrincipal.TDataModule1.Create(nil);
  with dtModule do begin
    FDConPrincipal.Connected := true;
    if (pId = -1) then begin
      with FDQPessoa do begin
        SQL.Clear;
        SQL.Text := 'INSERT INTO PESSOA (NOME, CPF, ENDERECO) ' +
                                'VALUES (:NOME, :CPF, :ENDERECO)';
        ParamByName('NOME').AsString := pPessoa.getNome();
        ParamByName('CPF').AsInteger := pPessoa.getCpf;
        ParamByName('ENDERECO').AsInteger := pPessoa.getCep;
        ExecSQL;
      end;
      result := true;
    end else begin
      FDQPessoa.SQL.Clear;
      FDQPessoa.SQL.Text := 'UPDATE ENDERECO SET LOGRADOURO = :LOGRADOURO, ' +
                              'NUMERO = :NUMERO, CEP = :CEP, BAIRRO = :BAIRRO, ' +
                              'CIDADE = :CIDADE, ESTADO = :ESTADO ' +
                              'WHERE ID = :ID';
      FDQPessoa.ParamByName('LOGRADOURO').AsString := pEndereco.getLogradouro;
      FDQPessoa.ParamByName('NUMERO').AsInteger := pEndereco.getNumero;
      FDQPessoa.ParamByName('CEP').AsInteger := pEndereco.getCep;
      FDQPessoa.ParamByName('BAIRRO').AsString := pEndereco.getBairro;
      FDQPessoa.ParamByName('CIDADE').AsString := pEndereco.getCidade;
      FDQPessoa.ParamByName('ESTADO').AsString := pEndereco.getEstado;
      FDQPessoa.ParamByName('ID').AsInteger := pId;
      FDQPessoa.ExecSQL;
      result := true;
    end;

  end;

end;

end.
